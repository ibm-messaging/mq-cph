#<copyright notice="lm-source" pids="" years="2005,2024">
#***************************************************************************
# Copyright (c) 2005,2024 IBM Corp.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Contributors:
#    Jerry Stevens - Initial implementation
#    Various members of the WebSphere MQ Performance Team at IBM Hursley UK
#***************************************************************************
#*</copyright>
############################################################################
#                                                                          #
# Performance Harness for IBM MQ C-MQI interface                           #
#                                                                          #
############################################################################

MQOpts.desc = Generic options for MQ messaging worker thread classes.

d.desc = Destination prefix
d.type = char[MQ_Q_NAME_LENGTH]
d.xtra = The first part of the name of an MQ destination object (queue or topic) to put or get messages to,\n\
with the second part (a numeric suffix) to be provided by cphDestinationFactory.\n\
At present this entry is duplicated in DestinationFactory.properties, so no default is provided in this file.

jb.desc = WMQ queue manager to connect to.
jb.type = char[MQ_Q_MGR_NAME_LENGTH]

jt.dflt = mqc
jt.desc = WMQ transport (mqb, mqc).
jt.type = string
jt.xtra = "mqb" is local-bindings connections, "mqc" is TCP/IP connections.

jh.dflt = localhost
jh.desc = DNS/IP of provider host machine.
jh.type = char[80]
jh.xtra = Ignored unless jt=mqc

ar.dflt = 
ar.desc = Client Auto Re-connect
ar.type = String
ar.xtra = Sets the client CNO reconnect option. Options are MQCNO_RECONNECT_AS_DEF MQCNO_RECONNECT MQCNO_RECONNECT_DISABLED or \n\
MQCNO_RECONNECT_Q_MGR. Any option other than null (the default) or MQCNO_RECONNECT_DISABLED will require a ccdt to be used.

ccdt.dflt = 
ccdt.desc = Client channel definition table (CCDT) URL. Will use this CCDT if specified
ccdt.type = string

jp.dflt = 1414
jp.desc = Port of provider host machine.
jp.type = int
jp.xtra = Ignored unless jt=mqc

jc.dflt = SYSTEM.DEF.SVRCONN
jc.desc = WMQ Channel to connect to.
jc.type = char[MQ_CHANNEL_NAME_LENGTH]
jc.xtra = Ignored unless jt=mqc

jf.dflt = false
jf.desc = Use the fastpath option on the MQCONNX call
jf.type = bool
jf.xtra = Using this option means the application and the local-queue-manager agent are part of the same unit\n\
of execution. Using this option should give much higher throughput when using high message rates as it avoids\n\
a lot of thread switching. For this reason it is also easier to compare raw publish and susbscribe performance.\n\
Ignored unless jt=mqb.

jy.dflt = false
jy.desc = Use the readahead option on the MQCONNX call
jy.type = bool
jy.xtra = Using this option will enable any getter with the readahead option.\n\
Disabling it, defaults to the QM-defined behaviour. Ignored unless jt=mqc.

jl.dflt = UNSPECIFIED
jl.desc = Specify which SSL CipherSpec to use
jl.type = char[MQ_SSL_CIPHER_SPEC_LENGTH]
jl.xtra = If not using SSL, do not set parameter, the default "UNSPECIFIED" will map to empty string

jw.dflt = UNSPECIFIED
jw.desc = Specify which TLS Certificate Label to use
jw.type = char[MQ_CERT_LABEL_LENGTH]
jw.xtra = Can only be set if a cipher spec is also provided, Only required if flowing a certificate for the client. The default "UNSPECIFIED" will map to empty string

kr.dflt = UNSPECIFIED
kr.desc = Specify Key Repository location
kr.type = CHAR[MQ_SSL_KEY_REPOSITORY_LENGTH]
kr.xtra = Can only be set if a cipher spec is also provided

ms.dflt = 1000
ms.desc = Message size in bytes.
ms.type = unsigned int

mf.dflt = 
mf.desc = File containing message to use
mf.type = string

mr.dflt = false
mr.desc = Randomise text in message (otherwise repeats every 57 chars)
mr.type = bool
mr.xtra = Text is pseudo-random. Each thread will generate it's own random text message that will be the same if a test is re-run.

rs.dflt = 0
rs.desc = Message buffer receive size in bytes. If left at default, will use value provided for ms
rs.type = unsigned int

pp.dflt = false
pp.desc = Use persistent messages.
pp.type = bool
pp.xtra = Set this to true to enforce sending persistent messages. Setting this to false will default to using the value of DEFPSIST value of the queue.

ppn.dflt = false
ppn.desc = Use non persistent messages. Override queue definition property
ppn.type = bool
ppn.xtra = Set to true to force use of non persistent message even if queue property has DEFPSIST set to true.\n\
Cannot be set if pp is set to true. 

p1.dflt = false
p1.desc = Use Put1 (Open q, put, close q)
p1.type = bool

tx.dflt = false
tx.desc = Transactionality.
tx.type = bool
tx.xtra = Whilst setting this to true will enforce syncpoints to be used. It does not imply the opposite when we set it to false. In that scenario\n\
we let the environment dictate whether to include it in a unit of work. On z/OS this would use a UOW, on all other platforms it would not.\n\
See txz parameter for forcing No UOW to be used on z/OS platforms.

txz.dflt = false
txz.desc = No Syncpoint override
txz.type = bool
txz.xtra = Set this to true on z/OS platforms to explicitly request no UOW to be used. Cannot be set if tx is set to true.

cc.dflt = 1
cc.desc = Commit count (transaction batching).
cc.type = unsigned int
cc.xtra = The number of operations completed within a single transaction.  This only applies\n\
to test classes which only normally perform a single operation (such as Sender or Subscriber).\n\
Ignored if tx=false.

rf.dflt = false
rf.desc = Use RFH2 on message headers
rf.type = bool
rf.xtra = Ignored if mh=true.

mh.dflt = false
mh.desc = Use message handle for message properties
mh.type = bool

to.dflt = 5
to.desc = Polling timeout on receiving messages.
to.type = int
to.xtra = Polling interval in seconds. Threads will exit if a timeout occurs.\n\
Set this option to -1 to wait indefinitely.

us.dflt = 
us.desc = Username to authenticate as. 
us.type = java.lang.String
us.xtra = The ADOPTCTX setting will determine if this userID or the process owner is utilised for further security checks.

pw.dflt = 
pw.desc = Password to authenticate as.
pw.type = string

cv.dflt = true
cv.desc = Convert message data (MQGMO_CONVERT)
cv.type = bool

an.dflt = 
an.desc = Sets ApplName in the MQCNO
an.type = string
an.extra = This will be the name of the application, e.g. the APPLTAG field on display conn mqsc command.

cz.dflt = false
cz.desc = Populate msg compression list with 4 options
cz.type = bool
cz.extra = The four listed compression options are: MQCOMPRESS_RLE, MQCOMPRESS_ZLIBFAST, MQCOMPRESS_ZLIBHIGH and MQCOMPRESS_NONE